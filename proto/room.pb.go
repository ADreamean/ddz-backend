// Code generated by protoc-gen-go. DO NOT EDIT.
// source: room.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RoomInfo struct {
	Id    int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Users []*User `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto1.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *RoomInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoomInfo) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type RoomJoinRequest struct {
	Id     int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId int32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *RoomJoinRequest) Reset()                    { *m = RoomJoinRequest{} }
func (m *RoomJoinRequest) String() string            { return proto1.CompactTextString(m) }
func (*RoomJoinRequest) ProtoMessage()               {}
func (*RoomJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *RoomJoinRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoomJoinRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto1.RegisterType((*RoomInfo)(nil), "proto.RoomInfo")
	proto1.RegisterType((*RoomJoinRequest)(nil), "proto.RoomJoinRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Room service

type RoomClient interface {
	Join(ctx context.Context, in *RoomJoinRequest, opts ...grpc.CallOption) (*RoomInfo, error)
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*RoomInfo, error)
}

type roomClient struct {
	cc *grpc.ClientConn
}

func NewRoomClient(cc *grpc.ClientConn) RoomClient {
	return &roomClient{cc}
}

func (c *roomClient) Join(ctx context.Context, in *RoomJoinRequest, opts ...grpc.CallOption) (*RoomInfo, error) {
	out := new(RoomInfo)
	err := grpc.Invoke(ctx, "/proto.Room/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*RoomInfo, error) {
	out := new(RoomInfo)
	err := grpc.Invoke(ctx, "/proto.Room/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Room service

type RoomServer interface {
	Join(context.Context, *RoomJoinRequest) (*RoomInfo, error)
	Create(context.Context, *User) (*RoomInfo, error)
}

func RegisterRoomServer(s *grpc.Server, srv RoomServer) {
	s.RegisterService(&_Room_serviceDesc, srv)
}

func _Room_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Room/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServer).Join(ctx, req.(*RoomJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Room_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Room/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _Room_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Room",
	HandlerType: (*RoomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Room_Join_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Room_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "room.proto",
}

func init() { proto1.RegisterFile("room.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xca, 0xcf, 0xcf,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x5c, 0xa5, 0xc5, 0xa9, 0x45,
	0x10, 0x21, 0x25, 0x5b, 0x2e, 0x8e, 0xa0, 0xfc, 0xfc, 0x5c, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x3e,
	0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x45,
	0x2e, 0x56, 0x90, 0xca, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x6e, 0x88, 0x16, 0xbd,
	0xd0, 0xe2, 0xd4, 0xa2, 0x20, 0x88, 0x8c, 0x92, 0x25, 0x17, 0x3f, 0x48, 0xbb, 0x57, 0x7e, 0x66,
	0x5e, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x09, 0x86, 0x29, 0x62, 0x5c, 0x6c, 0x20, 0xb5, 0x9e,
	0x29, 0x12, 0x4c, 0x60, 0x31, 0x28, 0xcf, 0x28, 0x9e, 0x8b, 0x05, 0xa4, 0x55, 0x48, 0x9f, 0x8b,
	0x05, 0xa4, 0x5d, 0x48, 0x0c, 0x6a, 0x3c, 0x9a, 0x79, 0x52, 0xfc, 0x48, 0xe2, 0x60, 0x67, 0xaa,
	0x71, 0xb1, 0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0x0a, 0x21, 0xbb, 0x08, 0x43, 0x5d, 0x12, 0x1b,
	0x98, 0x6f, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x99, 0x7d, 0xe1, 0x25, 0x02, 0x01, 0x00, 0x00,
}
