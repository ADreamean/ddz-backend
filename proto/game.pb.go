// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	game.proto
	login.proto
	push.proto
	room.proto
	user.proto

It has these top-level messages:
	GameRequest
	GameResponse
	LoginInfo
	LoginResult
	Message
	PushRequest
	RoomInfo
	RoomJoinRequest
	User
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type GameRequest struct {
	Type  int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Cards []int32 `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *GameRequest) Reset()                    { *m = GameRequest{} }
func (m *GameRequest) String() string            { return proto1.CompactTextString(m) }
func (*GameRequest) ProtoMessage()               {}
func (*GameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GameRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GameRequest) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type GameResponse struct {
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
}

func (m *GameResponse) Reset()                    { *m = GameResponse{} }
func (m *GameResponse) String() string            { return proto1.CompactTextString(m) }
func (*GameResponse) ProtoMessage()               {}
func (*GameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GameResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto1.RegisterType((*GameRequest)(nil), "proto.GameRequest")
	proto1.RegisterType((*GameResponse)(nil), "proto.GameResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GameServer service

type GameServerClient interface {
	Request(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*GameResponse, error)
}

type gameServerClient struct {
	cc *grpc.ClientConn
}

func NewGameServerClient(cc *grpc.ClientConn) GameServerClient {
	return &gameServerClient{cc}
}

func (c *gameServerClient) Request(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*GameResponse, error) {
	out := new(GameResponse)
	err := grpc.Invoke(ctx, "/proto.GameServer/Request", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GameServer service

type GameServerServer interface {
	Request(context.Context, *GameRequest) (*GameResponse, error)
}

func RegisterGameServerServer(s *grpc.Server, srv GameServerServer) {
	s.RegisterService(&_GameServer_serviceDesc, srv)
}

func _GameServer_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GameServer/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).Request(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GameServer",
	HandlerType: (*GameServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _GameServer_Request_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "game.proto",
}

func init() { proto1.RegisterFile("game.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4f, 0xcc, 0x4d,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xe6, 0x5c, 0xdc, 0xee, 0x89,
	0xb9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0x95, 0x05,
	0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x72, 0x62,
	0x51, 0x4a, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0x6b, 0x10, 0x84, 0xa3, 0xa4, 0xc4, 0xc5, 0x03,
	0xd1, 0x58, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x0a, 0xd2, 0x99, 0x9c, 0x9f, 0x02, 0xd7, 0x09, 0x62,
	0x1b, 0x39, 0x70, 0x71, 0x81, 0xd4, 0x04, 0xa7, 0x16, 0x95, 0xa5, 0x16, 0x09, 0x19, 0x71, 0xb1,
	0xc3, 0xad, 0x81, 0x38, 0x42, 0x0f, 0xc9, 0x6a, 0x29, 0x61, 0x14, 0x31, 0x88, 0xa9, 0x49, 0x6c,
	0x60, 0x31, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0xef, 0x72, 0x0d, 0xba, 0x00, 0x00,
	0x00,
}
